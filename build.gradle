buildscript {
    repositories {
        mavenCentral()
    }
    dependencyLocking {
        lockAllConfigurations()
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'org.jreleaser' version 'latest.release'
}

group = 'de.bwaldvogel'
version = '2.6.0'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

compileJava.options.encoding = 'UTF-8'

ext {
    title = 'log4j-systemd-journal-appender'
    description = 'Log4j appender for systemd journal.'
    url = 'https://www.github.com/bwaldvogel/log4j-systemd-journal-appender'
}

jar {
    manifest {
        attributes 'Implementation-Title': title, 'Implementation-Version': project.version
    }
}

task sourceJar(type: Jar) {
    archiveClassifier = "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = "javadoc"
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'de.bwaldvogel'
            artifactId = 'log4j-systemd-journal-appender'
            version = project.version
            pom {
                name = title
                description = 'Log4j appender for systemd journal.'
                url = 'https://github.com/bwaldvogel/log4j-systemd-journal-appender'
                inceptionYear = '2014'

                licenses {
                    license {
                        name = 'The BSD License'
                        url = 'http://www.opensource.org/licenses/bsd-license.php'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'bwaldvogel'
                        name = 'Benedikt Waldvogel'
                        email = 'mail@bwaldvogel.de'
                    }
                }
                scm {
                    url = 'git@github.com:bwaldvogel/log4j-systemd-journal-appender.git'
                    connection = 'scm:git:git@github.com:bwaldvogel/log4j-systemd-journal-appender.git'
                    developerConnection = 'scm:git:git@github.com:bwaldvogel/log4j-systemd-journal-appender.git'
                }
            }

            from components.java

            artifact sourceJar
            artifact javadocJar

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
        }
    }
    repositories {
        maven {
            name = 'staging'
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.mavenJava
}

jreleaser {
    signing {
        active = 'NEVER'
    }
    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'RELEASE'
                    sign = false
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository('build/staging-deploy')
                }
            }
        }
    }
}

repositories {
    mavenCentral()
}

wrapper {
    gradleVersion = '8.14.3'
    distributionType = Wrapper.DistributionType.ALL
}

dependencies {
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: 'latest.release'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: 'latest.release'
    annotationProcessor group: 'org.apache.logging.log4j', name: 'log4j-core', version: 'latest.release'

    implementation group: 'net.java.dev.jna', name: 'jna', version: 'latest.release'

    testImplementation group: 'junit', name: 'junit', version: 'latest.release'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: 'latest.release'

    components.all { ComponentMetadataDetails details ->
        details.statusScheme = ['candidate', 'release']
        if (details.id.version =~ /(?i).+(-|\.)(CANDIDATE|RC|BETA|ALPHA|PR|M\d+).*/) {
            details.status = 'candidate'
        } else {
            details.status = 'release'
        }
    }

    dependencyLocking {
        lockAllConfigurations()
    }

    task resolveAndLockAll {
        doFirst {
            assert gradle.startParameter.writeDependencyLocks
        }
        doLast {
            configurations.findAll {
                // Add any custom filtering on the configurations to be resolved
                it.canBeResolved
            }.each { it.resolve() }
        }
    }
}
